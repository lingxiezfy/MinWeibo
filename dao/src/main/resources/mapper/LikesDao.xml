<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fy.real.min.weibo.dao.dao.LikesDao">
  <resultMap id="BaseResultMap" type="com.fy.real.min.weibo.model.entity.Likes">
    <id column="likes_id" jdbcType="INTEGER" property="likesId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="weibo_id" jdbcType="INTEGER" property="weiboId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    likes_id, user_id, weibo_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from likes
    where likes_id = #{likesId,jdbcType=INTEGER}
  </select>
    <select id="selectByUserAndWeiBo" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from likes
      where user_id = #{userId} and weibo_id = #{weiBoId}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from likes
    where likes_id = #{likesId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="likes_id" keyProperty="likesId" parameterType="com.fy.real.min.weibo.model.entity.Likes" useGeneratedKeys="true">
    insert into likes (user_id, weibo_id, create_time, 
      update_time)
    values (#{userId,jdbcType=INTEGER}, #{weiboId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="likes_id" keyProperty="likesId" parameterType="com.fy.real.min.weibo.model.entity.Likes" useGeneratedKeys="true">
    insert into likes
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="weiboId != null">
        weibo_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="weiboId != null">
        #{weiboId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fy.real.min.weibo.model.entity.Likes">
    update likes
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="weiboId != null">
        weibo_id = #{weiboId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where likes_id = #{likesId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fy.real.min.weibo.model.entity.Likes">
    update likes
    set user_id = #{userId,jdbcType=INTEGER},
      weibo_id = #{weiboId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where likes_id = #{likesId,jdbcType=INTEGER}
  </update>
</mapper>